package com.yubico.ykneo.curves;

/* Copyright (c) 2013-2014 Yubico AB 
 * 
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

import javacard.security.ECPrivateKey;
import javacard.security.ECPublicKey;
import javacard.security.KeyPair;

public class Frp256v1 {

	private final static byte[] q = {
		(byte)0xf1, (byte)0xfd, 0x17, (byte)0x8c, 0x0b, 0x3a, (byte)0xd5, (byte)0x8f, 0x10, 0x12, 0x6d, (byte)0xe8, (byte)0xce, 0x42, 0x43, 0x5b, 0x39, 0x61, (byte)0xad, (byte)0xbc, (byte)0xab, (byte)0xc8, (byte)0xca, 0x6d, (byte) 0xe8, (byte)0xfc, (byte)0xf3, 0x53, (byte)0xd8, 0x6e, (byte) 0x9c, 0x03
	};

	private final static byte[] a = {
		(byte)0xf1, (byte)0xfd, 0x17, (byte)0x8c, 0x0b, 0x3a, (byte)0xd5, (byte)0x8f, 0x10, 0x12, 0x6d, (byte)0xe8, (byte)0xce, 0x42, 0x43, 0x5b, 0x39, 0x61, (byte)0xad, (byte)0xbc, (byte)0xab, (byte)0xc8, (byte)0xca, 0x6d, (byte) 0xe8, (byte)0xfc, (byte)0xf3, 0x53, (byte)0xd8, 0x6e, (byte)0x9c, 0x00
	};

	private final static byte[] b = {
		(byte)0xee, 0x35, 0x3f, (byte)0xca, 0x54, 0x28, (byte)0xa9, 0x30, 0x0d, 0x4a, (byte)0xba, 0x75, 0x4a, 0x44, (byte)0xc0, 0x0f, (byte)0xdf, (byte) 0xec, 0x0c, (byte)0x9a, (byte) 0xe4, (byte)0xb1, (byte)0xa1, (byte)0x80, 0x30, 0x75, (byte) 0xed, (byte)0x96, 0x7b, 0x7b, (byte)0xb7, 0x3f
	};

	private final static byte[] G = {
		0x04, (byte)0xb6, (byte)0xb3, (byte)0xd4, (byte)0xc3, 0x56, (byte)0xc1, 0x39, (byte)0xeb, 0x31, 0x18, 0x3d, 0x47, 0x49, (byte)0xd4, 0x23, (byte)0x95, (byte)0x8c, 0x27, (byte)0xd2, (byte)0xdc, (byte)0xaf, (byte)0x98, (byte)0xb7, 0x01, 0x64, (byte)0xc9, 0x7a, 0x2d, (byte)0xd9, (byte)0x8f, 0x5c, (byte)0xff, 0x61, 0x42, (byte) 0xe0, (byte)0xf7, (byte)0xc8, (byte)0xb2, 0x04, (byte)0x91, 0x1f, (byte)0x92, 0x71, (byte)0xf0, (byte)0xf3, (byte) 0xec, (byte) 0xef, (byte)0x8c, 0x27, 0x01, (byte)0xc3, 0x07, (byte) 0xe8, (byte) 0xe4, (byte)0xc9, (byte) 0xe1, (byte)0x83, 0x11, 0x5a, 0x15, 0x54, 0x06, 0x2c, (byte)0xfb
	};

	private final static byte[] r = { // n?
		(byte)0xa9, (byte)0xfb, 0x57, (byte)0xdb, (byte)0xa1, (byte)0xee, (byte)0xa9, (byte)0xbc, 0x3e, 0x66, 0x0a, (byte)0x90, (byte)0x9d, (byte)0x83, (byte)0x8d, 0x71, (byte)0x8c, 0x39, 0x7a, (byte)0xa3, (byte)0xb5, 0x61, (byte)0xa6, (byte)0xf7, (byte)0x90, 0x1e, 0x0e, (byte)0x82, (byte)0x97, 0x48, 0x56, (byte)0xa7
	};

	static public KeyPair newKeyPair() {
		KeyPair key = new KeyPair(KeyPair.ALG_EC_FP, (short) 256);

		ECPrivateKey privKey = (ECPrivateKey) key.getPrivate();
		ECPublicKey pubKey = (ECPublicKey) key.getPublic();

		privKey.setFieldFP(q, (short) 0, (short) q.length);
		privKey.setA(a, (short) 0, (short) a.length);
		privKey.setB(b, (short) 0, (short) b.length);
		privKey.setG(G, (short) 0, (short) G.length);
		privKey.setR(r, (short) 0, (short) r.length);

		pubKey.setFieldFP(q, (short) 0, (short) q.length);
		pubKey.setA(a, (short) 0, (short) a.length);
		pubKey.setB(b, (short) 0, (short) b.length);
		pubKey.setG(G, (short) 0, (short) G.length);
		pubKey.setR(r, (short) 0, (short) r.length);

		return key;
	}
}
